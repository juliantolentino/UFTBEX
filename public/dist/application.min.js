"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","angularFileUpload","linkify"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0).hashPrefix("!")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){return void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(role)?(allowed=!0,!0):void 0}),allowed||(event.preventDefault(),$state.go("authentication.signin",{},{notify:!1}).then(function(){$rootScope.$broadcast("$stateChangeSuccess","authentication.signin",{},toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){$state.previous={state:fromState,params:fromParams,href:$state.href(fromState,fromParams)}})}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]),ApplicationConfiguration.registerModule("projects",["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","angularFileUpload","linkify","ngDragDrop"]),ApplicationConfiguration.registerModule("standards",["projects"]),ApplicationConfiguration.registerModule("standards"),ApplicationConfiguration.registerModule("supports"),ApplicationConfiguration.registerModule("users",["core"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]),angular.module("core.admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"],isPublic:!1})}]),angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}]),angular.module("core").run(["Menus",function(Menus){}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("not-found"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/views/404.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus",function($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?!0:options.isPublic,roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].roles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.link,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].items[itemIndex].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{isPublic:!0})}]),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),angular.module("projects").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Projects",state:"projects",type:"dropdown"}),Menus.addSubMenuItem("topbar","projects",{title:"Search for Projects",state:"projects.list"}),Menus.addSubMenuItem("topbar","projects",{title:"Create Project",state:"projects.create"})}]),angular.module("projects").config(["$stateProvider",function($stateProvider){$stateProvider.state("projects",{"abstract":!0,url:"/projects",template:"<ui-view/>"}).state("projects.list",{url:"",templateUrl:"modules/projects/views/list-projects.client.view.html"}).state("projects.create",{url:"/create",templateUrl:"modules/projects/views/create-project.client.view.html"}).state("projects.view",{url:"/:projectId",templateUrl:"modules/projects/views/view-project.client.view.html"}).state("projects.edit",{url:"/:projectId/edit",templateUrl:"modules/projects/views/edit-project.client.view.html"})}]),angular.module("projects").controller("list-ProjectsController",["$scope","$stateParams","$location","Authentication","Projects",function($scope,$stateParams,$location,Authentication,Projects){$scope.authentication=Authentication,$scope.find=function(search){search.minGrade||(search.minGrade="0"),search.maxGrade||(search.maxGrade="912"),search.searchName?$scope.projects=Projects.query({projectName:search.searchName}):search.searchText?$scope.projects=Projects.query({benchmark:search.searchText}):search.subject?$scope.projects=Projects.query({minGrade:search.minGrade,maxGrade:search.maxGrade,subject:search.subject}):$scope.projects=Projects.query({minGrade:search.minGrade,maxGrade:search.maxGrade}),console.log(search)},$scope.range=function(min,max,step){step=step||1;for(var input=[],i=min;max>=i;i+=step)input.push(i);return input},$scope.getGradeRange=function(min,max){var retString="";return retString=0===min?"K":1===min?"1st":2===min?"2nd":3===min?"3rd":min+"th",retString+=" - ",retString+=1===max?"1st":2===max?"2nd":3===max?"3rd":max+"th"},$scope.noRatingCheck=function(rats){return rats>0&&5>=rats?"":"None yet!"},$scope.enterPressName=function(keyEvent,search,show){13===keyEvent.which&&($scope.projects=Projects.query({projectName:search.searchName}),$scope.show=!0)},$scope.enterPressStandard=function(keyEvent,search,show){13===keyEvent.which&&($scope.projects=Projects.query({benchmark:search.searchText}),$scope.show=!0)},$scope.findOne=function(){$scope.project=Projects.get({projectId:$stateParams.projectId})},$scope.getRatingNum=function(num){return null!==num?num:void 0}}]),angular.module("projects").controller("ProjectsController",["$scope","$stateParams","$sce","$location","$window","$timeout","Authentication","Projects","FileUploader","linkify","Users",function($scope,$stateParams,$sce,$location,$window,$timeout,Authentication,Projects,FileUploader,linkify,Users){$scope.authentication=Authentication,$scope.collaborators=[],$scope.collaborators.push($scope.authentication.user._id),$scope.uploader=new FileUploader({url:"/api/projects/picture"}),$scope.uploaderC=new FileUploader({url:"/api/projects/picture"}),$scope.create=function(){$scope.essentialDetails.overallStandards="",$scope.essentialDetails.overallSubjects="",$scope.essentialDetails.overallSubjects+=$scope.essentialDetails.litDetails.subjectName+" , ",$scope.essentialDetails.overallSubjects+=$scope.essentialDetails.mathDetails.subjectName+" , ",$scope.essentialDetails.overallSubjects+=$scope.essentialDetails.scienceDetails.subjectName+" , ",$scope.essentialDetails.overallSubjects+=$scope.essentialDetails.ssDetails.subjectName+" , ",void 0!==$scope.essentialDetails.litDetails.standards&&($scope.essentialDetails.overallStandards+=$scope.essentialDetails.litDetails.standards+", "),void 0!==$scope.essentialDetails.mathDetails.standards&&($scope.essentialDetails.overallStandards+=$scope.essentialDetails.mathDetails.standards+", "),void 0!==$scope.essentialDetails.scienceDetails.standards&&($scope.essentialDetails.overallStandards+=$scope.essentialDetails.scienceDetails.standards+", "),void 0!==$scope.essentialDetails.ssDetails.standards&&($scope.essentialDetails.overallStandards+=$scope.essentialDetails.ssDetails.standards+", "),"undefined"!=typeof $scope.essentialDetails.otherSubject&&("undefined"!=typeof $scope.essentialDetails.otherSubject[0]&&(void 0!==$scope.essentialDetails.otherSubject[0].subjectName&&($scope.essentialDetails.overallSubjects+=$scope.essentialDetails.otherSubject[0].subjectName+" , "),void 0!==$scope.essentialDetails.otherSubject[0].standards&&($scope.essentialDetails.overallStandards+=$scope.essentialDetails.otherSubject[0].standards+", ")),"undefined"!=typeof $scope.essentialDetails.otherSubject[1]&&(void 0!==$scope.essentialDetails.otherSubject[1].subjectName&&($scope.essentialDetails.overallSubjects+=$scope.essentialDetails.otherSubject[1].subjectName+" , "),void 0!==$scope.essentialDetails.otherSubject[1].standards&&($scope.essentialDetails.overallStandards+=$scope.essentialDetails.otherSubject[1].standards+", ")),"undefined"!=typeof $scope.essentialDetails.otherSubject[2]&&(void 0!==$scope.essentialDetails.otherSubject[2].subjectName&&($scope.essentialDetails.overallSubjects+=$scope.essentialDetails.otherSubject[2].subjectName+" , "),void 0!==$scope.essentialDetails.otherSubject[2].standards&&($scope.essentialDetails.overallStandards+=$scope.essentialDetails.otherSubject[2].standards+", ")),"undefined"!=typeof $scope.essentialDetails.otherSubject[3]&&(void 0!==$scope.essentialDetails.otherSubject[3].subjectName&&($scope.essentialDetails.overallSubjects+=$scope.essentialDetails.otherSubject[3].subjectName+" , "),void 0!==$scope.essentialDetails.otherSubject[3].standards&&($scope.essentialDetails.overallStandards+=$scope.essentialDetails.otherSubject[3].standards+", ")),"undefined"!=typeof $scope.essentialDetails.otherSubject[4]&&(void 0!==$scope.essentialDetails.otherSubject[4].subjectName&&($scope.essentialDetails.overallSubjects+=$scope.essentialDetails.otherSubject[4].subjectName+" , "),void 0!==$scope.essentialDetails.otherSubject[4].standards&&($scope.essentialDetails.overallStandards+=$scope.essentialDetails.otherSubject[4].standards+", ")));var project=new Projects({name:this.name,created:this.created,user:this.user,status:this.status,isPublic:this.isPublic,projAdmin:this.collaborators,minGrade:this.minGrade,maxGrade:this.maxGrade,askStandardStep:this.askStandardStep,researchStandardStep:this.researchStandardStep,imagineStandardStep:this.imagineStandardStep,planStandardStep:this.planStandardStep,createStandardStep:this.createStandardStep,testStandardStep:this.testStandardStep,improveStandardStep:this.improveStandardStep,ask:this.ask,research:this.research,imagine:this.imagine,plan:this.plan,createStep:this.createStep,testStep:this.testStep,improveStep:this.improveStep,worksheetStep:this.worksheetStep,essentialDetails:this.essentialDetails,rating:null});$scope.additionalSubjects=["Dance","English Language Development","Gifted","Health Education","Music","Physical Education","Special Skills","Technology","Theatre","Visual Art"],project.$save(function(response){$scope.uploaderC.queue.length>0&&($scope.uploaderC.queue[0].url="/api/projects/picture/"+response._id,$scope.uploaderC.uploadAll()),$scope.name="",$location.path("projects/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(project){if(project){project.$remove();for(var i in $scope.projects)$scope.projects[i]===project&&$scope.projects.splice(i,1)}else $scope.project.$remove(function(){$location.path("projects")})},$scope.CombineStandards=function(){$scope.project.essentialDetails.overallStandards="",$scope.project.essentialDetails.overallSubjects="",$scope.project.essentialDetails.overallSubjects+=$scope.project.essentialDetails.litDetails[0].subjectName+" , ",$scope.project.essentialDetails.overallSubjects+=$scope.project.essentialDetails.mathDetails[0].subjectName+" , ",$scope.project.essentialDetails.overallSubjects+=$scope.project.essentialDetails.scienceDetails[0].subjectName+" , ",$scope.project.essentialDetails.overallSubjects+=$scope.project.essentialDetails.ssDetails[0].subjectName+" , ",""!==$scope.project.essentialDetails.litDetails[0].standards&&($scope.project.essentialDetails.overallStandards+=$scope.project.essentialDetails.litDetails[0].standards+", "),""!==$scope.project.essentialDetails.mathDetails[0].standards&&($scope.project.essentialDetails.overallStandards+=$scope.project.essentialDetails.mathDetails[0].standards+", "),""!==$scope.project.essentialDetails.scienceDetails[0].standards&&($scope.project.essentialDetails.overallStandards+=$scope.project.essentialDetails.scienceDetails[0].standards+", "),""!==$scope.project.essentialDetails.ssDetails[0].standards&&($scope.project.essentialDetails.overallStandards+=$scope.project.essentialDetails.ssDetails[0].standards+", "),"undefined"!=typeof $scope.project.essentialDetails.otherSubject&&("undefined"!=typeof $scope.project.essentialDetails.otherSubject[0]&&(""!==$scope.project.essentialDetails.otherSubject[0].subjectName&&($scope.project.essentialDetails.overallSubjects+=$scope.project.essentialDetails.otherSubject[0].subjectName+" , "),""!==$scope.project.essentialDetails.otherSubject[0].standards&&($scope.project.essentialDetails.overallStandards+=$scope.project.essentialDetails.otherSubject[0].standards+", ")),"undefined"!=typeof $scope.project.essentialDetails.otherSubject[1]&&(""!==$scope.project.essentialDetails.otherSubject[1].subjectName&&($scope.project.essentialDetails.overallSubjects+=$scope.project.essentialDetails.otherSubject[1].subjectName+" , "),""!==$scope.project.essentialDetails.otherSubject[1].standards&&($scope.project.essentialDetails.overallStandards+=$scope.project.essentialDetails.otherSubject[1].standards+", ")),"undefined"!=typeof $scope.project.essentialDetails.otherSubject[2]&&(""!==$scope.project.essentialDetails.otherSubject[2].subjectName&&($scope.project.essentialDetails.overallSubjects+=$scope.project.essentialDetails.otherSubject[2].subjectName+" , "),""!==$scope.project.essentialDetails.otherSubject[2].standards&&($scope.project.essentialDetails.overallStandards+=$scope.project.essentialDetails.otherSubject[2].standards+", ")),"undefined"!=typeof $scope.project.essentialDetails.otherSubject[3]&&(""!==$scope.project.essentialDetails.otherSubject[3].subjectName&&($scope.project.essentialDetails.overallSubjects+=$scope.project.essentialDetails.otherSubject[3].subjectName+" , "),""!==$scope.project.essentialDetails.otherSubject[3].standards&&($scope.project.essentialDetails.overallStandards+=$scope.project.essentialDetails.otherSubject[3].standards+", ")),"undefined"!=typeof $scope.project.essentialDetails.otherSubject[4]&&(""!==$scope.project.essentialDetails.otherSubject[4].subjectName&&($scope.project.essentialDetails.overallSubjects+=$scope.project.essentialDetails.otherSubject[4].subjectName+" , "),""!==$scope.project.essentialDetails.otherSubject[4].standards&&($scope.project.essentialDetails.overallStandards+=$scope.project.essentialDetails.otherSubject[4].standards+", "))),$scope.project.essentialDetails.overallStandards=$scope.project.essentialDetails.overallStandards.slice(0,-2)},$scope.update=function(){console.log("In $scope.update");var project=$scope.project;project.worksheetStep.theWorksheet="",project.$update(function(){$location.path("projects/"+project._id)},function(errorResponse){$scope.error=errorResponse.data.message}),$scope.uploader.queue.length>0&&($scope.uploader.queue[0].url="/api/projects/picture/"+project._id,$scope.uploader.uploadAll())},$scope.remix=function(){console.log("In $scope.remix"),console.log(this.name);var project_old=$scope.project,project_old_name=[];project_old_name.push(project_old.name),project_old_name.push(" Remix");var project=new Projects({name:project_old_name,created:project_old.created,user:project_old.user,status:project_old.status,isPublic:project_old.isPublic,minGrade:project_old.minGrade,maxGrade:project_old.maxGrade,askStandardStep:project_old.askStandardStep,ask:project_old.ask,researchStandardStep:project_old.researchStandardStep,research:project_old.research,imagineStandardStep:project_old.imagineStandardStep,imagine:project_old.imagine,planStandardStep:project_old.planStandardStep,plan:project_old.plan,createStandardStep:project_old.createStandardStep,createStep:project_old.createStep,testStandardStep:project_old.testStandardStep,testStep:project_old.testStep,improveStandardStep:project_old.improveStandardStep,improveStep:project_old.improveStep,essentialDetails:project_old.essentialDetails,rating:null});project.$save(function(response){$scope.uploaderC.queue.length>0&&($scope.uploaderC.queue[0].url="/api/projects/picture/"+response._id,$scope.uploaderC.uploadAll()),$scope.name="",$location.path("projects/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.projects=Projects.query()},$scope.findOne=function(){$scope.project=Projects.get({projectId:$stateParams.projectId},function(authentication){console.log($scope.authentication.user),console.log($scope.project.projAdmin),$scope.projectOwnership=!1;for(var i in $scope.project.projAdmin)$scope.project.projAdmin[i]===$scope.authentication.user._id&&($scope.projectOwnership=!0)})},$scope.addCollab=function(collabEmail){collabEmail&&Projects.addCollab({email:collabEmail},function(collab){"undefined"!=typeof collab._id&&$scope.collaborators.indexOf(collab._id)<0&&($scope.collaborators.push(collab._id),console.log($scope.collaborators))})},$scope.editCollab=function(collabEmail){collabEmail&&Projects.addCollab({email:collabEmail},function(collab){"undefined"!=typeof collab._id&&$scope.project.projAdmin.indexOf(collab._id)<0&&($scope.project.projAdmin.push(collab._id),console.log($scope.project.projAdmin))})},$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.project.worksheetStep.theWorksheet=fileReaderEvent.target.result},0)}}},$scope.linkify=function(link){var text=linkify.normal(link);return text&&(text=text.replace(/<a href="www./gi,'<a href="http://www.'),text=text.replace(/<a target="_blank" href="www./gi,'<a target="_blank" href="http://www.')),$sce.trustAsHtml(text)},$scope.uploaderC.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.glyphs=new Array("gold glyphicon glyphicon-star-empty","gold glyphicon glyphicon-star-empty","gold glyphicon glyphicon-star-empty","gold glyphicon glyphicon-star-empty","gold glyphicon glyphicon-star-empty"),$scope.rating_hover=function(num){for(var i=0;num>i;i++)$scope.glyphs[i]="gold glyphicon glyphicon-star";for(i=num;5>i;i++)$scope.glyphs[i]="gold glyphicon glyphicon-star-empty"},$scope.reset_hover=function(){$scope.rating_hover($scope.rating)},$scope.getMyRating=function(){if($scope.project.rating&&$scope.project.rating.ratings){var rater=$scope.project.rating.ratings.filter(isRater)[0];return"undefined"==typeof rater?($scope.rating=0,"You haven't yet rated this project. Give it a couple of stars?"):($scope.rating=rater.num,$scope.reset_hover(),"Your currently rate this project at "+rater.num+" stars")}return $scope.rating=0,"This project has not yet been rated. Give it a couple of stars?"};var isRater=function(value){return value.reviewer===$scope.authentication.user._id};$scope.rate=function(){if(console.log("In $scope.rate"),$scope.project.rating){var rater=$scope.project.rating.ratings.filter(isRater)[0],length=$scope.project.rating.ratings.length,rateToRemove=0,newLength=length+1;if(0===length&&($scope.project.rating.avg_rating=0),"undefined"!=typeof rater){rateToRemove=rater.num;var rateIndex=$scope.project.rating.ratings.indexOf(rater);$scope.project.rating.ratings.splice(rateIndex,1),newLength-=1}$scope.project.rating.avg_rating=($scope.project.rating.avg_rating*length+$scope.rating-rateToRemove)/newLength,$scope.project.rating.ratings.push({num:$scope.rating,reviewer:$scope.authentication.user._id})}else $scope.project.rating={ratings:[{num:$scope.rating,reviewer:$scope.authentication.user._id}],avg_rating:$scope.rating};$scope.update()},$scope.askStandardStep=[],$scope.researchStandardStep=[],$scope.imagineStandardStep=[],$scope.planStandardStep=[],$scope.createStandardStep=[],$scope.testStandardStep=[],$scope.improveStandardStep=[]}]),angular.module("projects").factory("Projects",["$resource",function($resource){return $resource("api/projects/:projectId",{projectId:"@_id"},{update:{method:"PUT"},addCollab:{method:"GET",url:"/api/projects/addCollab/:email"}})}]),angular.module("standards").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Standards",state:"standards",type:"dropdown"}),Menus.addSubMenuItem("topbar","standards",{title:"List Standards",state:"standards.list"})}]),angular.module("standards").config(["$stateProvider",function($stateProvider){$stateProvider.state("standards",{"abstract":!0,url:"/standards",template:"<ui-view/>"}).state("standards.list",{url:"",templateUrl:"modules/standards/views/list-standards.client.view.html"}).state("standards.view",{url:"/:standardId",templateUrl:"modules/standards/views/view-standard.client.view.html"})}]),angular.module("standards").controller("StandardsController",["$scope","$stateParams","$location","Authentication","Standards",function($scope,$stateParams,$location,Authentication,Standards){$scope.authentication=Authentication,$scope.create=function(){var standard=new Standards({benchmark:this.benchmark,description:this.description,subject:this.subject,grade:this.grade,bodyOfKnowledge:this.bodyOfKnowledge});standard.$save(function(response){$location.path("standards/"+response._id),$scope.benchmark="",$scope.description="",$scope.subject="",$scope.grade="",$scope.bodyOfKnowledge=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(standard){if(standard){standard.$remove();for(var i in $scope.standards)$scope.standards[i]===standard&&$scope.standards.splice(i,1)}else $scope.standard.$remove(function(){$location.path("standards")})},$scope.update=function(){var standard=$scope.standard;standard.$update(function(){$location.path("standards/"+standard._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(search){search.minGrade||(search.minGrade="0"),search.maxGrade||(search.maxGrade="912"),search.searchText?$scope.standards=Standards.query({benchmark:search.searchText}):search.searchKeyword?$scope.standards=Standards.query({keyword:search.searchKeyword}):search.subject?$scope.standards=Standards.query({minGrade:search.minGrade,maxGrade:search.maxGrade,subject:search.subject}):$scope.standards=Standards.query({minGrade:search.minGrade,maxGrade:search.maxGrade}),console.log(search)},$scope.enterPressStandard=function(keyEvent,search,show){13===keyEvent.which&&($scope.standards=Standards.query({benchmark:search.searchText}),$scope.show=!0)},$scope.enterPressKeyword=function(keyEvent,search,show){13===keyEvent.which&&($scope.standards=Standards.query({keyword:search.searchKeyword}),$scope.show=!0)},$scope.findOne=function(){$scope.standard=Standards.get({standardId:$stateParams.standardId})},$scope.categories=[],$scope.add_category=function(){$scope.categories.push({})}}]),angular.module("standards").factory("Standards",["$resource",function($resource){return $resource("api/standards/:standardId",{standardId:"@_id"},{update:{method:"PUT"}})}]),angular.module("supports").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Support",state:"support",type:"dropdown"}),Menus.addSubMenuItem("topbar","support",{title:"Example",state:"support.example"}),Menus.addSubMenuItem("topbar","support",{title:"FAQ",state:"support.faq"}),Menus.addSubMenuItem("topbar","support",{title:"About Us",state:"support.about"})}]),angular.module("supports").config(["$stateProvider",function($stateProvider){$stateProvider.state("support",{"abstract":!0,url:"/support",template:"<ui-view/>"}).state("support.faq",{url:"/FAQ",templateUrl:"modules/support/views/faq.client.view.html"}).state("support.example",{url:"/example",templateUrl:"modules/support/views/example.client.view.html"}).state("support.examples",{url:"/examples",templateUrl:"modules/support/views/examples.client.view.html"}).state("support.about",{url:"/About",templateUrl:"modules/support/views/about.client.view.html"}).state("support.example1",{url:"/example1",templateUrl:"modules/support/views/example1.client.view.html"}).state("support.example2",{url:"/example2",templateUrl:"modules/support/views/example2.client.view.html"}).state("support.example3",{url:"/example3",templateUrl:"modules/support/views/example3.client.view.html"}).state("support.example4",{url:"/example4",templateUrl:"modules/support/views/example4.client.view.html"}).state("support.example5",{url:"/example5",templateUrl:"modules/support/views/example5.client.view.html"}).state("support.example6",{url:"/example6",templateUrl:"modules/support/views/example6.client.view.html"})}]),angular.module("users.admin").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}]),angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/views/admin/user-list.client.view.html",controller:"UserListController"}).state("admin.user",{url:"/users/:userId",templateUrl:"modules/users/views/admin/user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"modules/users/views/admin/user-edit.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/views/settings/settings.client.view.html",data:{roles:["user","admin"]}}).state("settings.account",{url:"/account",templateUrl:"modules/users/views/settings/account.client.view.html"}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin",function($scope,$filter,Admin){Admin.query(function(data){$scope.users=data,$scope.buildPager()}),$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay();
},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")($scope.users,{$:$scope.search}),$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedItems=$scope.filteredItems.slice(begin,end)},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()}}]),angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve",function($scope,$state,Authentication,userResolve){$scope.authentication=Authentication,$scope.user=userResolve,$scope.remove=function(user){confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),$scope.users.splice($scope.users.indexOf(user),1)):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.update=function(){var user=$scope.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication",function($scope,$state,$http,$location,$window,Authentication){$scope.authentication=Authentication,$scope.error=$location.search().err,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message})},$scope.countyList=["None","Alachua","Broward"],$scope.schoolList=[],$scope.county0=["None0","None1","None2"],$scope.county1=["University of Florida","Sante Fe"],$scope.county2=["Mater","Lakes","Stirrup"],$scope.county="",$scope.school="",$scope.County=function(){if($scope.schoolList=[],$scope.credentials.county=$scope.county,$scope.county.trim()===$scope.countyList[1]){$scope.schoolList=[];for(var i=0;i<$scope.county1.length;i++)$scope.schoolList.push($scope.county1[i])}else if($scope.county.trim()===$scope.countyList[2]){$scope.schoolList=[];for(var i=0;i<$scope.county2.length;i++)$scope.schoolList.push($scope.county2[i])}else{$scope.schoolList=[];for(var i=0;i<$scope.county0.length;i++)$scope.schoolList.push($scope.county0[i])}console.log($scope.school)},$scope.callOauthProvider=function(url){var redirect_to;$state.previous&&(redirect_to=$state.previous.href),$window.location.href=url+(redirect_to?"?redirect_to="+encodeURIComponent(redirect_to):"")}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]),angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0}}]),angular.module("users").controller("SettingsController",["$scope","Authentication","Projects",function($scope,Authentication,Projects){$scope.user=Authentication.user,$scope.getUserProjects=function(){var userP=Projects.query({minGrade:0,maxGrade:12},function(){var goo=[];for(var i in userP)for(var j in userP[i].projAdmin)userP[i].projAdmin[j]===$scope.user._id&&goo.push(userP[i]);console.log(goo),$scope.userProjects=goo})},$scope.deleteProject=function(project,$location){if(confirm("Are you sure you want to delete this project?"))if(project){project.$remove();for(var i in $scope.userProjects)$scope.userProjects[i]===project&&$scope.userProjects.splice(i,1)}else $scope.project.$remove(function(){$location.path("projects")});return!1}}]),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]),angular.module("users.admin").factory("Admin",["$resource",function($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);